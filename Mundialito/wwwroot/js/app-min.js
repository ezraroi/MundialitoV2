angular.module("mundialitoApp",["key-value-editor","security","ngSanitize","ngRoute","ngAnimate","ui.bootstrap","autofields.bootstrap","cgBusy","ajoslin.promise-tracker","ui.select","ui.bootstrap.datetimepicker","ui.grid","ui.grid.autoResize","googlechart","angular-data.DSCacheFactory","toaster","ui.grid.saveState","ui.grid.resizeColumns"]).value("cgBusyTemplateName","App/Partials/angular-busy.html").config(["$routeProvider","$httpProvider","$locationProvider","$parseProvider","securityProvider","Constants",function(e,a,t,r,n,s){t.html5Mode(!0),a.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",a.interceptors.push("myHttpInterceptor"),n.urls.login=s.LOGIN_PATH,n.usePopups=!1,e.when("/",{templateUrl:"App/Dashboard/Dashboard.html",controller:"DashboardCtrl",resolve:{teams:["TeamsManager",e=>e.loadAllTeams()],players:["PlayersManager",e=>e.loadAllPlayers()]}}).when("/bets_center",{templateUrl:"App/Bets/BetsCenter.html",controller:"BetsCenterCtrl",resolve:{games:["GamesManager",e=>e.loadOpenGames()]}}).when("/users/:username",{templateUrl:"App/Users/UserProfile.html",controller:"UserProfileCtrl",resolve:{profileUser:["$route","UsersManager",(e,a)=>{var t=e.current.params.username;return a.getUser(t,!0)}],userGameBets:["$route","BetsManager",(e,a)=>{var t=e.current.params.username;return a.getUserBets(t)}],teams:["TeamsManager",e=>e.loadAllTeams()],generalBetsAreOpen:["GeneralBetsManager",e=>e.canSubmtiGeneralBet()],players:["PlayersManager",e=>e.loadAllPlayers()]}}).when("/manage_users",{templateUrl:"App/Users/ManageApp.html",controller:"ManageAppCtrl",resolve:{users:["UsersManager",e=>e.loadAllUsers()],teams:["TeamsManager",e=>e.loadAllTeams()],generalBets:["GeneralBetsManager",e=>e.loadAllGeneralBets()],players:["PlayersManager",e=>e.loadAllPlayers()]}}).when("/teams",{templateUrl:"App/Teams/Teams.html",controller:"TeamsCtrl",resolve:{teams:["TeamsManager",e=>e.loadAllTeams()]}}).when("/teams/:teamId",{templateUrl:"App/Teams/Team.html",controller:"TeamCtrl",resolve:{team:["$route","TeamsManager",(e,a)=>{var t=e.current.params.teamId;return a.getTeam(t)}],games:["$route","GamesManager",(e,a)=>{var t=e.current.params.teamId;return a.getTeamGames(t)}]}}).when("/games/:gameId",{templateUrl:"App/Games/Game.html",controller:"GameCtrl",resolve:{game:["$route","GamesManager",(e,a)=>{var t=e.current.params.gameId;return a.getGame(t)}],userBet:["$route","BetsManager",(e,a)=>{var t=e.current.params.gameId;return a.getUserBetOnGame(t)}]}}).when("/games",{templateUrl:"App/Games/Games.html",controller:"GamesCtrl",resolve:{games:["GamesManager",e=>e.loadAllGames()],teams:["TeamsManager",e=>e.loadAllTeams()]}}).when("/stadiums/:stadiumId",{templateUrl:"App/Stadiums/Stadium.html",controller:"StadiumCtrl",resolve:{stadium:["$q","$route","StadiumsManager",(e,a,t)=>{var r=a.current.params.stadiumId;return t.getStadium(r,!0)}]}}).when("/stadiums",{templateUrl:"App/Stadiums/Stadiums.html",controller:"StadiumsCtrl",resolve:{stadiums:["StadiumsManager",e=>e.loadAllStadiums()]}}).when("/login",{templateUrl:"App/Accounts/Login.html"}).when("/forgot",{templateUrl:"App/Accounts/ForgetPassword.html",controller:"ForgetPasswordCtrl"}).when("/reset",{templateUrl:"App/Accounts/ResetPassword.html",controller:"ResetPasswordCtrl"}).when("/join",{templateUrl:"App/Accounts/Register.html"}).when("/manage",{templateUrl:"App/Accounts/Manage.html"}).otherwise({redirectTo:"/"})}]).run(["$rootScope","$log","security","$route","$location","PluginsProvider","FootballDataGamePlugin","FootballDataTeamStatsPlugin",function(e,a,t,r,n,s,i,o){s.registerGameFactory(i),s.registerTeamFactory(o),t.events.login=function(t,r){a.log("Current user details: "+angular.toJson(r)),e.mundialitoApp.authenticating=!1},t.events.reloadUser=function(t,r){a.log("User reloaded"+angular.toJson(r)),e.mundialitoApp.authenticating=!1},t.events.logout=function(e){a.log("User logged out"),e.authenticate()},e.mundialitoApp={params:null,loading:!0,authenticating:!0,message:null},["/reset","/forgot","/join","/login"].includes(n.$$path)||(a.log("Starting authentication"),t.authenticate()),e.security=t,e.$on("$locationChangeStart",function(){a.debug("$locationChangeStart"),e.mundialitoApp.loading=!0}),e.$on("$locationChangeSuccess",function(){a.debug("$locationChangeSuccess"),e.mundialitoApp.params=angular.copy(r.current.params),e.mundialitoApp.loading=!1}),e.$on("$routeChangeStart",function(){a.debug("$routeChangeStart"),e.mundialitoApp.message="Loading..."}),e.$on("$routeChangeSuccess",function(){a.debug("$routeChangeSuccess"),e.mundialitoApp.message=null})}]),angular.module("mundialitoApp").constant("Constants",{LOGIN_PATH:"/login",REFRESH_TIME:3e5,TABLE_GRID_OPTIONS:{saveWidths:!0,saveVisible:!0,saveOrder:!0,enableRowSelection:!1,enableSelectAll:!1,multiSelect:!1,rowTemplate:'<div ng-click="grid.appScope.goToUser(row)" style="cursor: pointer" ng-class="{\'text-primary\':row.entity.Username===grid.appScope.security.user.Username }"><div ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ng-class="{ \'ui-grid-row-header-cell\': col.isRowHeader }" ui-grid-cell></div></div>',columnDefs:[{field:"Place",displayName:"",resizable:!1,maxWidth:30},{field:"Name",displayName:"Name",resizable:!0,minWidth:150},{field:"Points",displayName:"Points",resizable:!0},{field:"TotalMarks",displayName:"Total Marks",resizable:!0},{field:"Results",displayName:"Results",resizable:!0},{field:"Marks",displayName:"Marks",resizable:!0},{field:"YellowCards",displayName:"Yellow Cards Marks",resizable:!0},{field:"Corners",displayName:"Corners Marks",resizable:!0},{field:"PlaceDiff",displayName:"",resizable:!1,maxWidth:45,cellTemplate:"<div ng-class=\"{'text-success': COL_FIELD.indexOf('+') !== -1, 'text-danger': (COL_FIELD.indexOf('+') === -1) && (COL_FIELD !== '0')}\"><div class=\"ngCellText\">{{::COL_FIELD}}</div></div>"}]}}),angular.module("mundialitoApp").controller("ForgetPasswordCtrl",["$scope","$rootScope","security","Alert",function(e,a,t,r){a.mundialitoApp.authenticating=!1;e.user=new function(){return{Email:""}},e.forget=function(){e.emailForm.$valid&&(a.mundialitoApp.message="Processing...",t.forgotPassword(angular.copy(e.user)).then(()=>{r.success("Reset password token was sent to your email, please follow the link from there")}).catch(e=>{r.error("Failed to generate reset password token: "+e)}).finally(function(){a.mundialitoApp.message=null}))},e.schema=[{property:"Email",label:"Email Address",type:"email",attr:{required:!0}}]}]),angular.module("mundialitoApp").controller("LoginCtrl",["$scope","$rootScope","security",function(e,a,t){a.mundialitoApp.authenticating=!1;e.user=new function(){return{username:"",password:"",rememberMe:!1}},e.login=function(){e.loginForm.$valid&&(a.mundialitoApp.message="Processing Login...",t.login(angular.copy(e.user)).finally(function(){a.mundialitoApp.message=null}))},e.schema=[{property:"username",type:"text",attr:{ngMinlength:4,required:!0}},{property:"password",type:"password",attr:{ngMinlength:4,required:!0}},{property:"rememberMe",label:"Keep me logged in",type:"checkbox"}]}]),angular.module("mundialitoApp").controller("ManageCtrl",["$scope","Alert",function(e,a){var t=function(){return{oldPassword:"",newPassword:"",confirmPassword:""}};e.changingPassword=null,e.changePassword=function(){e.changingPassword=new t},e.cancel=function(){e.changingPassword=null},e.updatePassword=function(){if(e.manageForm.$valid){var t=angular.copy(e.changingPassword);e.changingPassword=null,e.security.changePassword(t).then(function(){a.success("Password was changed sucessfully")},function(){a.error("Failed to change password"),e.changingPassword=t})}},e.changePasswordSchema=[{property:"oldPassword",type:"password",attr:{required:!0}},{property:"newPassword",type:"password",attr:{ngMinlength:4,required:!0}},{property:"confirmPassword",type:"password",attr:{confirmPassword:"changingPassword.newPassword",required:!0}}]}]),angular.module("mundialitoApp").controller("RegisterCtrl",["$scope","security",function(e,a){e.mundialitoApp.authenticating=!1;e.user=new function(){return{firstname:"",lastname:"",email:"",username:"",password:"",confirmPassword:""}},e.join=function(){e.joinForm.$valid&&(e.isJoinActive=!0,e.mundialitoApp.message="Processing Registration...",a.register(angular.copy(e.user)).finally(function(){e.mundialitoApp.message=null,e.isJoinActive=!1}))},e.schema=[{property:"firstname",label:"First Name",type:"text",attr:{required:!0}},{property:"lastname",label:"Last Name",type:"text",attr:{required:!0}},{property:"email",label:"Email Address",type:"email",attr:{required:!0}},{property:"username",type:"text",attr:{ngMinlength:4,required:!0}},{property:"password",type:"password",attr:{required:!0}},{property:"confirmPassword",label:"Confirm Password",type:"password",attr:{confirmPassword:"user.password",required:!0}}],!0===e.mundialitoApp.protect&&(e.user.privateKey="",e.schema.push({property:"privateKey",help:"The Private Key was given in the e-mail of the payment confirmation",label:"Private Key",type:"text",attr:{required:!0}}))}]),angular.module("mundialitoApp").controller("ResetPasswordCtrl",["$scope","$rootScope","security","$location","Alert",function(e,a,t,r,n){a.mundialitoApp.authenticating=!1;e.user=new function(){return{confirmPassword:"",password:"",email:r.search().email,token:r.search().token}},e.reset=function(){e.resetForm.$valid&&(a.mundialitoApp.message="Processing Reset Password...",t.resetPassword(angular.copy(e.user)).then(()=>{n.success("Your was was reset successfully")}).finally(function(){a.mundialitoApp.message=null}))},e.schema=[{property:"password",type:"password",attr:{required:!0}},{property:"confirmPassword",label:"Confirm Password",type:"password",attr:{confirmPassword:"user.password",required:!0}}]}]),angular.module("mundialitoApp").factory("Bet",["$http","$log",function(e,a){function t(e){e&&this.setData(e)}return t.prototype={setData:function(e){angular.extend(this,e)},update:function(){return a.debug("Bet: Will update bet "+this.BetId),e.put("api/bets/"+this.BetId,this,{tracker:"updateBet"})},getGameUrl:function(){return"/games/"+this.Game.GameId},getClass:function(){return 7===this.Points?"success":this.Points>=5?"primary":this.Points>=3?"info":this.Points>0?"warning":"danger"}},t}]),angular.module("mundialitoApp").controller("BetsCenterCtrl",["$scope","$log","$timeout","Alert","BetsManager","games",function(e,a,t,r,n,s){e.games=s,e.bets={};var i=function(){angular.isDefined(e.security.user)&&null!=e.security.user?n.getUserBets(e.security.user.Username).then(function(t){for(var r=0;r<t.length;r++)e.bets[t[r].Game.GameId]=t[r],e.bets[t[r].Game.GameId].GameId=t[r].Game.GameId;for(var n=0;n<s.length;n++)angular.isDefined(e.bets[s[n].GameId])?e.bets[e.bets[s[n].GameId]]=t[r]:(a.debug("BetsCenterCtrl: game "+s[n].GameId+" has not bet"),e.bets[s[n].GameId]={BetId:-1,GameId:s[n].GameId})}):(a.debug("BetsCenterCtrl: user info not loaded yet, will retry in 1 second"),t(i,1e3))};i(),e.updateBet=function(t){-1!==e.bets[t].BetId?(a.debug("BetsCenterCtrl: Will update bet"),e.bets[t].update().then(e=>{r.success("Bet was updated successfully"),n.setBet(e)}).catch(function(){r.error("Failed to update Bet, please try again")})):(a.debug("BetsCenterCtrl: Will create new bet"),n.addBet(e.bets[t]).then(function(n){a.log("BetsCenterCtrl: Bet "+n.BetId+" was added"),e.bets[t]=n,r.success("Bet was added successfully")}).catch(function(){r.error("Failed to add Bet, please try again")}))},e.shuffleBet=function(t){var r,n,s=["1","X","2"],i=[0,0,0,0,1,1,1,1,2,2,3,3,4,5],o=s[Math.floor(3*Math.random())];do{r=i[Math.floor(Math.random()*i.length)],n=i[Math.floor(Math.random()*i.length)]}while("X"!==o&&r===n);a.debug("Random game mark is "+o),"X"===o&&(n=r),a.debug("Home goals: "+r),a.debug("Away goals: "+n),e.bets[t].HomeScore=r,e.bets[t].AwayScore=n,e.bets[t].CardsMark=s[Math.floor(3*Math.random())],e.bets[t].CornersMark=s[Math.floor(3*Math.random())]}}]),angular.module("mundialitoApp").factory("BetsManager",["$http","$q","Bet","$log","MundialitoUtils","GamesManager",function(e,a,t,r,n,s){return{_pool:{},_retrieveInstance:function(e,a){var n=this._pool[e];return n?(r.debug("BetsManager: updating existing instance of bet "+e),n.setData(a)):(r.debug("BetsManager: saving new instance of bet "+e),n=new t(a),this._pool[e]=n),n.LoadTime=new Date,n},_search:function(e){r.debug("BetsManager: will fetch bet "+e+" from local pool");var a=this._pool[e];if(!angular.isDefined(a)||!n.shouldRefreshInstance(a))return a;r.debug("BetsManager: Instance was loaded at "+a.LoadTime+", will reload it from server")},_load:function(a,t){var n=this;r.debug("BetsManager: will fetch bet "+a+" from server"),e.get("api/bets/"+a,{tracker:"getBet"}).then(e=>{var a=n._retrieveInstance(e.data.BetId,e.data);t.resolve(a)}).catch(()=>{t.reject()})},addBet:function(t){var n=a.defer(),i=this;return r.debug("BetsManager: will add new bet - "+angular.toJson(t)),e.post("api/bets/",t,{tracker:"addBetOnGame"}).then(e=>{var a=i._retrieveInstance(e.data.BetId,e.data);s.clearGamesCache(),n.resolve(a)}).catch(e=>{r.error("Failed to add bet"),n.reject(e)}),n.promise},getBet:function(e,t){var r=a.defer(),n=void 0;return angular.isDefined(t)&&t||(n=this._search(e)),n?r.resolve(n):this._load(e,r),r.promise},getGameBets:function(t){var n=a.defer(),s=this;return r.debug("BetsManager: will fetch all bets of game "+t+" from server"),e.get("api/games/"+t+"/bets",{tracker:"getGameBets"}).then(e=>{var a=[];e.data.forEach(e=>{var t=s._retrieveInstance(e.BetId,e);a.push(t)}),n.resolve(a)}).catch(function(){n.reject()}),n.promise},getUserBets:function(t){var n=a.defer(),s=this;return r.debug("BetsManager: will fetch user "+t+" bets from server"),e.get("api/bets/user/"+t,{tracker:"getUserBets"}).then(e=>{var a=[];e.data.forEach(e=>{var t=s._retrieveInstance(e.BetId,e);a.push(t)}),n.resolve(a)}).catch(function(){n.reject()}),n.promise},getUserBetOnGame:function(t){var n=a.defer(),s=this;return r.debug("BetsManager: will fetch user bet of game "+t+" from server"),e.get("api/games/"+t+"/mybet",{tracker:"getUserBetOnGame"}).then(e=>{if(-1!=e.data.BetId){var a=s._retrieveInstance(e.data.BetId,e.data);n.resolve(a)}n.resolve(e.data)}).catch(()=>{n.reject()}),n.promise},setBet:function(e){r.debug("BetsManager: will set bet "+e.BetId+" to -"+angular.toJson(e));var a=this._search(e.BetId);return a?a.setData(e):a=this._retrieveInstance(e.BetId,e),a}}}]),angular.module("mundialitoApp").controller("DashboardCtrl",["$scope","$log","Constants","$location","$timeout","GamesManager","UsersManager","GeneralBetsManager","teams","players","BetsManager",function(e,a,t,r,n,s,i,o,l,u,d){e.generalBetsAreOpen=!1,e.submittedGeneralBet=!0,e.pendingUpdateGames=!1,e.teamsDic={},e.playersDic={};for(var m=0;m<l.length;m++)e.teamsDic[l[m].TeamId]=l[m];for(m=0;m<u.length;m++)e.playersDic[u[m].PlayerId]=u[m];s.loadAllGames().then(t=>{e.games=t,e.pendingUpdateGames=void 0!==_.findWhere(e.games,{IsPendingUpdate:!0}),e.pendingUpdateGamesFolloweesBets=[],a.info("DashboardCtrl: followees:"+e.security.user.Followees),_.filter(e.games,e=>e.IsPendingUpdate).forEach(a=>{d.getGameBets(a.GameId).then(a=>{let t=_.filter(a,a=>e.security.user.Followees.includes(a.User.Username));e.pendingUpdateGamesFolloweesBets=e.pendingUpdateGamesFolloweesBets.concat(t)})})});var c=()=>{angular.isDefined(e.security.user)&&null!=e.security.user?o.hasGeneralBet(e.security.user.Username).then(a=>{e.submittedGeneralBet=!0===a}):(a.debug("DashboardCtrl: user info not loaded yet, will retry in 1 second"),n(c,1e3))};function g(){var a=e.gridApi.saveState.save();localStorage.setItem("gridState",a)}c(),o.canSubmtiGeneralBet().then(a=>{e.generalBetsAreOpen=!0===a,e.generalBetsAreOpen||o.loadAllGeneralBets().then(function(a){e.generalBets=a,e.winningTeams={},e.winningPlayers={};for(var t=0;t<e.generalBets.length;t++)angular.isDefined(e.winningTeams[e.generalBets[t].WinningTeamId])||(e.winningTeams[e.generalBets[t].WinningTeamId]=0),e.winningTeams[e.generalBets[t].WinningTeamId]+=1,angular.isDefined(e.winningPlayers[e.generalBets[t].GoldenBootPlayerId])||(e.winningPlayers[e.generalBets[t].GoldenBootPlayerId]=0),e.winningPlayers[e.generalBets[t].GoldenBootPlayerId]+=1;var r={type:"PieChart",options:{displayExactValues:!0,is3D:!0,backgroundColor:{fill:"transparent"},chartArea:{left:10,top:20,bottom:0,height:"100%"},title:"Winning Team Bets Distribution"},data:[["Team","Number Of Users"]]};for(var n in e.winningTeams)r.data.push([e.teamsDic[n].Name,e.winningTeams[n]]);for(var s in e.chart=r,(r={}).type="PieChart",r.options={displayExactValues:!0,is3D:!0,backgroundColor:{fill:"transparent"},chartArea:{left:10,top:20,bottom:0,height:"100%"},title:"Winning Golden Boot Player Bets Distribution"},r.data=[["Player","Number Of Users"]],e.winningPlayers)r.data.push([e.playersDic[s].Name,e.winningPlayers[s]]);e.playersChart=r})}),i.getTable().then(a=>{e.users=a}),e.isOpenForBetting=(e=>e.IsOpen),e.isPendingUpdate=(e=>e.IsPendingUpdate),e.isDecided=function(e){return!e.IsOpen&&!e.IsPendingUpdate},e.isGameBet=(e=>a=>a.Game.GameId===e.GameId),e.hasBets=(a=>_.filter(e.pendingUpdateGamesFolloweesBets,e=>e.Game.GameId===a.GameId).length>0),e.gridOptions={...t.TABLE_GRID_OPTIONS,data:"users",onRegisterApi:a=>{e.gridApi=a,e.gridApi.colResizable.on.columnSizeChanged(e,g),e.gridApi.core.on.columnVisibilityChanged(e,g),e.gridApi.core.on.sortChanged(e,g)}},e.getTableHeight=(()=>{var t=30*(e.users?e.users.length:0)+30;return a.debug("Total Height: "+t),{height:t+"px"}}),e.goToUser=(e=>{r.path(e.entity.getUrl())})}]),angular.module("mundialitoApp").factory("Game",["$http","$log",function(e,a){function t(e){e&&this.setData(e)}return t.prototype={setData:function(e){angular.extend(this,e)},delete:function(){if(confirm("Are you sure you would like to delete game "+this.GameId))return a.debug("Game: Will delete game "+this.GameId),e.delete("api/games/"+this.GameId,{tracker:"deleteGame"})},update:function(){return a.debug("Game: Will update game "+this.GameId),e.put("api/games/"+this.GameId,this,{tracker:"editGame"})},getUrl:function(){return"/games/"+this.GameId}},t}]),angular.module("mundialitoApp").controller("GameCtrl",["$scope","$log","Constants","UsersManager","GamesManager","BetsManager","game","userBet","Alert","$location","PluginsProvider","keyValueEditorUtils",function(e,a,t,r,n,s,i,o,l,u,d,m){function c(){var a=e.gridApi.saveState.save();localStorage.setItem("gridState",a)}e.game=i,e.simulatedGame={},e.plugins={},e.userBet=o,e.userBet.GameId=i.GameId,e.showEditForm=!1,e.toKeyValue=(e=>_.keys(e).map(a=>({name:a,value:e[a]}))),e.integrationsData=e.toKeyValue(e.game.IntegrationsData),d.getGameDetailsFromAll(e.game).then(a=>{a.forEach(a=>{e.plugins[a.property]={data:a.data,template:a.template}})}),e.game.IsOpen||s.getGameBets(e.game.GameId).then(t=>{a.debug("GameCtrl: get game bets"+angular.toJson(t)),e.gameBets=t;var r={type:"PieChart",options:{displayExactValues:!0,is3D:!0,backgroundColor:{fill:"transparent"},chartArea:{left:10,top:20,bottom:0,height:"100%"},title:"Bets Distribution"}},n=_.filter(t,function(e){return e.HomeScore>e.AwayScore}).length,s=_.filter(t,function(e){return e.HomeScore===e.AwayScore}).length,i=_.filter(t,function(e){return e.HomeScore<e.AwayScore}).length;r.data=[["Game Mark","Number Of Users"],["1",n],["X",s],["2",i]],e.chart=r}),e.updateGame=(()=>{angular.isDefined(i.Stadium.Games)&&null!=i.Stadium.Games&&delete i.Stadium.Games,e.game.IntegrationsData=m.mapEntries(m.compactEntries(e.integrationsData)),e.game.update().then(e=>{l.success("Game was updated successfully"),n.setGame(e.data)}).catch(e=>{l.error("Failed to update game, please try again"),a.error("Error updating game",e)})}),e.updateBet=(()=>{-1!==e.userBet.BetId?e.userBet.update().then(e=>{l.success("Bet was updated successfully"),s.setBet(e)}).catch(e=>{l.error("Failed to update bet, please try again"),a.error("Error updating bet",e)}):s.addBet(e.userBet).then(t=>{a.log("GameCtrl: Bet "+t.BetId+" was added"),e.userBet=t,l.success("Bet was added successfully")},e=>{l.error("Failed to add bet, please try again"),a.error("Error adding bet",e)})}),e.simulateGame=(()=>{a.debug("GameCtrl: simulating game"),n.simulateGame(e.game.GameId,e.simulatedGame).then(a=>{e.users=a,l.success("Table updated with simulation result")}).catch(e=>{l.error("Failed to simulate game, please try again"),a.error("Error simulating game",e)})}),e.sort=(t=>{a.debug("GameCtrl: sorting by "+t),e.gameBets=_.sortBy(e.gameBets,e=>{switch(t){case"points":return e.Points;case"cards":return e.CardsMark;case"corners":return e.CornersMark;case"user":return e.User.FirstName+e.User.LastName;case"result":return e.HomeScore+"-"+e.AwayScore}})}),e.gridOptions={...t.TABLE_GRID_OPTIONS,data:"users",onRegisterApi:a=>{e.gridApi=a,e.gridApi.colResizable.on.columnSizeChanged(e,c),e.gridApi.core.on.columnVisibilityChanged(e,c),e.gridApi.core.on.sortChanged(e,c)}},e.getTableHeight=(()=>{var t=30*(e.users?e.users.length:0)+30;return a.debug("Total Height: "+t),{height:t+"px"}}),e.goToUser=(e=>{u.path(e.entity.getUrl())}),e.getUserPlace=(a=>e.usersMap.get(a.Username).Place),e.$watch("simulatedGame",()=>{e.users=void 0},!0),r.getTable().then(a=>{e.usersMap=new Map,a.forEach(a=>{e.usersMap.set(a.Username,a)});let t=_.chain(a).filter(a=>e.security.user.Followees.includes(a.Username)).pluck("Username").value();e.followeesBets=_.filter(e.gameBets,e=>t.includes(e.User.Username));let r=_.chain(a).first(3).pluck("Username").value();e.top3UsersBets=_.filter(e.gameBets,e=>r.includes(e.User.Username));let n=0;a.forEach((a,t)=>{a.Username===e.security.user.Username&&(n=t)});let s=Math.max(n-3,0),i=Math.min(n+3,a.length),o=_.chain(a.slice(s,i+1)).pluck("Username").filter(a=>a!==e.security.user.Username).value();e.neighborsBets=_.filter(e.gameBets,e=>o.includes(e.User.Username))})}]),angular.module("mundialitoApp").controller("GamesCtrl",["$scope","$log","GamesManager","games","teams","StadiumsManager","Alert",function(e,a,t,r,n,s,i){e.newGame=null,e.gamesFilter="All",e.games=r,e.teams=n,s.loadAllStadiums().then(function(a){e.stadiums=a}),e.addNewGame=function(){$(".selectpicker").selectpicker("refresh"),e.newGame=t.getEmptyGameObject()},e.saveNewGame=function(){t.addGame(e.newGame).then(function(a){i.success("Game was added successfully"),e.newGame=t.getEmptyGameObject(),e.games.push(a)})},e.isPendingUpdate=function(e){return e.IsPendingUpdate},e.updateGame=function(e){angular.isDefined(e.Stadium.Games)&&null!=e.Stadium.Games&&delete e.Stadium.Games,e.update().then(e=>{i.success("Game was updated successfully"),t.setGame(e)})}}]),angular.module("mundialitoApp").factory("GamesManager",["$http","$q","Game","$log","MundialitoUtils","DSCacheFactory","User",function(e,a,t,r,n,s,i){var o=void 0,l=void 0;return{_cacheManager:s("GamesManager",{cacheFlushInterval:18e5}),_pool:{},_retrieveInstance:function(e,a){var n=this._pool[e];return n?(r.debug("GamesManager: updating existing instance of game "+e),n.setData(a)):(r.debug("GamesManager: saving new instance of game "+e),n=new t(a),this._pool[e]=n),n.LoadTime=new Date,n},_search:function(e){r.debug("GamesManager: will fetch game "+e+" from local pool");var a=this._pool[e];if(!angular.isDefined(a)||!n.shouldRefreshInstance(a))return a;r.debug("GamesManager: Instance was loaded at "+a.LoadTime+", will reload it from server")},_load:function(a,t){var n=this;r.debug("GamesManager: will fetch game "+a+" from server"),e.get("api/games/"+a,{tracker:"getGame"}).then(e=>{var a=n._retrieveInstance(e.data.GameId,e.data);t.resolve(a)}).catch(()=>{t.reject()})},clearGamesCache:function(){this._cacheManager.remove("api/games")},getEmptyGameObject:function(){return{HomeTeam:"",AwayTeam:"",Date:"",Stadium:""}},addGame:function(t){var n=a.defer();angular.isObject(t.AwayTeam)||(t.AwayTeam=angular.fromJson(t.AwayTeam)),angular.isObject(t.HomeTeam)||(t.HomeTeam=angular.fromJson(t.HomeTeam)),angular.isObject(t.Stadium)||(t.Stadium=angular.fromJson(t.Stadium));var s=this;return r.debug("GamesManager: will add new game - "+angular.toJson(t)),e.post("api/games",t,{tracker:"addGame"}).then(e=>{var a=s._retrieveInstance(e.data.GameId,e.data);n.resolve(a)}).catch(function(){n.reject()}),n.promise},getGame:function(e,t){var r=a.defer(),n=void 0;return angular.isDefined(t)&&t||(n=this._search(e)),n?r.resolve(n):this._load(e,r),r.promise},loadAllGames:function(){if(o)return o;var t=a.defer(),n=this;return r.debug("GamesManager: will fetch all games from server"),e.get("api/games",{tracker:"getGames"}).then(e=>{var a=[];e.data.forEach(e=>{var t=n._retrieveInstance(e.GameId,e);a.push(t)}),t.resolve(a)}).catch(()=>{t.reject()}),o=t.promise,t.promise},loadOpenGames:function(){if(l)return l;var t=a.defer(),n=this;return r.debug("GamesManager: will fetch all open games from server"),e.get("api/games/open",{tracker:"getOpenGames"}).then(e=>{var a=[];e.data.forEach(e=>{var t=n._retrieveInstance(e.GameId,e);a.push(t)}),t.resolve(a)}).catch(()=>{t.reject()}),l=t.promise,t.promise},getTeamGames:function(t){var n=a.defer(),s=this;return r.debug("GamesManager: will fetch all games of team "+t+"  from server"),e.get("api/teams/"+t+"/games",{tracker:"getTeamGames"}).then(e=>{var a=[];e.data.forEach(e=>{var t=s._retrieveInstance(e.GameId,e);a.push(t)}),n.resolve(a)}).catch(e=>{n.reject(e)}),n.promise},getStadiumGames:function(t){var n=a.defer(),s=this;return r.debug("GamesManager: will fetch all games in stadium "+t+"  from server"),e.get("api/games/Stadium/"+t,{tracker:"getStadiumGames"}).then(function(e){var a=[];e.data.forEach(e=>{var t=s._retrieveInstance(e.GameId,e);a.push(t)}),n.resolve(a)}).catch(e=>{n.reject(e)}),n.promise},simulateGame:function(t,n){var s=a.defer();return r.debug("GamesManager: will simulate game "+t),e.post("api/games/"+t+"/simulate",n,{tracker:"simulateGame"}).then(e=>{var a=[];e.data.forEach(e=>{a.push(new i(e))}),s.resolve(a)}).catch(e=>{s.reject(e)}),s.promise},setGame:function(e){r.debug("GamesManager: will set game "+e.GameId+" to -"+angular.toJson(e));var a=this._search(e.GameId);return a?a.setData(e):a=this._retrieveInstance(e.GameId,e),a}}}]),angular.module("mundialitoApp").directive("mundialitoGames",["Alert",function(e){return{restrict:"E",scope:{games:"=info",gamesType:"=filter",showOnly:"=",onAdd:"&"},templateUrl:"App/Games/gamesTemplate.html",link:a=>{a.allGames=a.games,a.$watch("gamesType",function(e){a.games=e&&"All"!==e?a.games.filter(e=>e.IsOpen):a.allGames}),a.deleteGame=(t=>{var r=t;t.delete().then(()=>{e.success("Game was deleted successfully"),a.games.splice(a.games.indexOf(r),1)})})}}}]),angular.module("mundialitoApp").factory("Alert",["toaster","$log","$rootScope",function(e,a,t){return{success:function(a){e.pop("success","Success",a)},error:function(a,t){e.pop("error",t||"Error",a)},note:function(a){e.pop("note","Info",a)}}}]),angular.module("mundialitoApp").factory("ErrorHandler",["$rootScope","$log","Alert","$location","Constants",function(e,a,t,r,n){return this.handle=((e,s,i,o)=>{if(a.log(e),!o.ignoreError){if(401===s)return localStorage.removeItem("accessToken"),sessionStorage.removeItem("accessToken"),void r.path(n.LOGIN_PATH);var l=[],u=void 0;e.Message&&(u=e.Message),e.errors&&angular.forEach(e.errors,e=>{angular.forEach(e,e=>{l.push(e)})}),e.ModelState&&angular.forEach(e.ModelState,function(e){l.push(e)}),e.ExceptionMessage&&l.push(e.ExceptionMessage),e.error_description&&l.push(e.error_description),0!==l.length||u||(u="General Error",l.push("Looks like the server is down, please try again in few minutes")),t.error(l.join("\n"),u)}}),this}]).factory("myHttpInterceptor",["ErrorHandler","$q",function(e,a){return{response:function(e){return e},responseError:function(t){return e.handle(t.data,t.status,t.headers,t.config),a.reject(t)}}}]),angular.module("mundialitoApp").factory("MundialitoUtils",["Constants",function(e){return{shouldRefreshInstance:a=>{return!(!angular.isDefined(a.LoadTime)||!angular.isDate(a.LoadTime))&&(new Date).getTime()-a.LoadTime.getTime()>e.REFRESH_TIME}}}]),angular.module("mundialitoApp").directive("accessLevel",["$log","security",function(e,a){return{restrict:"A",link:function(e,t,r){var n,s=t.css("display"),i="";function o(){i&&n&&(i===n?t.css("display",s):t.css("display","none"))}e.$watch(function(){return a.user},function(a){e.user=a,i=void 0===e.user||null===e.user?"User":e.user.Roles?e.user.Roles:"User",o()},!0),r.$observe("accessLevel",function(e){e&&(n=e),o()})}}}]),angular.module("mundialitoApp").directive("activeNav",["$location",function(e){return{restrict:"A",link:function(a,t){var r=t.find("a")[0].href;a.location=e,a.$watch("location.absUrl()",function(e){r===e?t.addClass("active"):t.removeClass("active")})}}}]),angular.module("mundialitoApp").directive("confirmPassword",[function(){return{restrict:"A",require:"ngModel",link:function(e,a,t,r){r.$parsers.unshift(function(a,n){var s=a!=e.$eval(t.confirmPassword);return r.$setValidity("noMatch",!s),a})}}}]),angular.module("mundialitoApp").directive("mundialitoToggleText",[function(){return{link:function(e,a,t){e.$watch(t.varieble,function(e){var r;r=1==e?t.trueLabel:t.falseLabel,a.text(r)})}}}]),angular.module("mundialitoApp").factory("GeneralBet",["$http","$log",function(e,a){function t(e){e&&this.setData(e)}return t.prototype={setData:function(e){angular.extend(this,e)},update:function(){return a.debug("General Bet: Will update general bet "+this.GeneralBetId),e.put("api/generalbets/"+this.GeneralBetId,this,{tracker:"updateGeneralBet"})},resolve:function(){a.debug("General Bet: Will resolve general bet "+this.GeneralBetId);var t={TeamIsRight:this.TeamIsRight||!1,PlayerIsRight:this.PlayerIsRight||!1};return e.put("api/generalbets/"+this.GeneralBetId+"/resolve",t,{tracker:"resolveGeneralBet"})}},t}]),angular.module("mundialitoApp").factory("GeneralBetsManager",["$http","$q","GeneralBet","$log","MundialitoUtils",function(e,a,t,r,n){return{_pool:{},_retrieveInstance:function(e,a){var n=this._pool[e];return n?(r.debug("GeneralBetsManager: updating existing instance of bet "+e),n.setData(a)):(r.debug("GeneralBetsManager: saving new instance of bet "+e),n=new t(a),this._pool[e]=n),n.LoadTime=new Date,n},_search:function(e){r.debug("GeneralBetsManager: will fetch bet "+e+" from local pool");var a=this._pool[e];if(!angular.isDefined(a)||!n.shouldRefreshInstance(a))return a;r.debug("GeneralBetsManager: Instance was loaded at "+a.LoadTime+", will reload it from server")},_load:function(a,t){var n=this;r.debug("GeneralBetsManager: will fetch bet "+a+" from server"),e.get("api/generalbets/"+a,{tracker:"getGeneralBet"}).then(e=>{var a=n._retrieveInstance(e.data.GeneralBetId,e.data);t.resolve(a)}).catch(e=>{t.reject(e)})},addGeneralBet:function(t){var n=a.defer(),s=this;return r.debug("GeneralBetsManager: will add new bet - "+angular.toJson(t)),e.post("api/generalbets/",t,{tracker:"addGeneralBet"}).then(e=>{var a=s._retrieveInstance(e.data.GeneralBetId,e.data);n.resolve(a)}).catch(e=>{n.reject(e)}),n.promise},getGeneralBet:function(e,t){var r=a.defer(),n=void 0;return angular.isDefined(t)&&t||(n=this._search(e)),n?r.resolve(n):this._load(e,r),r.promise},loadAllGeneralBets:function(){var t=a.defer(),n=this;return r.debug("GeneralBetsManager: will fetch all general bets from server"),e.get("api/generalbets",{tracker:"getGeneralBets"}).then(e=>{var a=[];e.data.forEach(e=>{var t=n._retrieveInstance(e.GeneralBetId,e);a.push(t)}),t.resolve(a)}).catch(e=>{t.reject(e)}),t.promise},hasGeneralBet:function(t){var n=a.defer();return r.debug("GeneralBetsManager: will check if user "+t+" has general bets"),e.get("api/generalbets/has-bet/"+t,{tracker:"getUserGeneralBet"}).then(e=>{n.resolve(e.data)}).catch(e=>{n.reject(e)}),n.promise},canSubmtiGeneralBet:function(){var t=a.defer();return r.debug("GeneralBetsManager: will check if user general bets are closed"),e.get("api/generalbets/cansubmitbets/",{tracker:"getCanSubmitGeneralBets"}).then(e=>{t.resolve(e.data)}).catch(e=>{t.reject(e)}),t.promise},getUserGeneralBet:function(t){var n=a.defer(),s=this;return r.debug("GeneralBetsManager: will fetch user "+t+" general bet from server"),e.get("api/generalbets/user/"+t,{tracker:"getUserGeneralBet"}).then(e=>{var a=s._retrieveInstance(e.data.GeneralBetId,e.data);n.resolve(a)}).catch(e=>{n.reject(e)}),n.promise},setGeneralBet:function(e){r.debug("GeneralBetsManager: will set bet "+e.GeneralBetId+" to -"+angular.toJson(e));var a=this._search(e.GeneralBetId);return a?a.setData(e):a=this._retrieveInstance(e.GeneralBetId,e),a}}}]),angular.module("mundialitoApp").factory("Player",["$http","$log",function(e,a){function t(e){e&&this.setData(e)}return t.prototype={setData:function(e){angular.extend(this,e)}},t}]),angular.module("mundialitoApp").factory("PlayersManager",["$http","$q","Player","$log",function(e,a,t,r){var n=void 0;return{_pool:{},_retrieveInstance:function(e,a){var n=this._pool[e];return n?(r.debug("playersPromise: updating existing instance of player "+e),n.setData(a)):(r.debug("playersPromise: saving new instance of player "+e),n=new t(a),this._pool[e]=n),n.LoadTime=new Date,n},getPlayerSchema:function(){return[{property:"Name",label:"Name",type:"text",attr:{required:!0}}]},loadAllPlayers:function(){if(n)return n;var t=a.defer(),s=this;return r.debug("PlayersManager: will fetch all players from server"),e.get("api/players",{tracker:"getPlayers",cache:!0}).then(e=>{var a=[];e.data.forEach(e=>{var t=s._retrieveInstance(e.PlayerId,e);a.push(t)}),t.resolve(a)}).catch(e=>{t.reject(e)}),n=t.promise,t.promise}}}]),angular.module("mundialitoApp").factory("Stadium",["$http","$log",function(e,a){function t(e){e&&this.setData(e)}return t.prototype={setData:function(e){angular.extend(this,e)},delete:function(){if(confirm("Are you sure you would like to delete stadium "+this.Name))return a.debug("Stadium: Will delete stadium "+this.StadiumId),e.delete("api/stadiums/"+this.StadiumId,{tracker:"deleteStadium"})},update:function(){a.debug("Stadium: Will update stadium "+this.StadiumId);var t={};return angular.copy(this,t),delete t.Games,e.put("api/stadiums/"+this.StadiumId,t,{tracker:"editStadium"})},getUrl:function(){return"/stadiums/"+this.StadiumId}},t}]),angular.module("mundialitoApp").controller("StadiumCtrl",["$scope","$log","StadiumsManager","GamesManager","stadium","Alert",function(e,a,t,r,n,s){e.stadium=n,e.showEditForm=!1,r.getStadiumGames(e.stadium.StadiumId).then(t=>{a.debug("StadiumCtrl: Got games of stadium"),e.games=t}),e.updateStadium=(()=>{e.stadium.update().then(()=>{s.success("Stadium was updated successfully")})}),e.schema=t.getStaidumSchema()}]),angular.module("mundialitoApp").controller("StadiumsCtrl",["$scope","$log","StadiumsManager","stadiums","Alert",function(e,a,t,r,n){e.stadiums=r,e.showNewStadium=!1,e.newStadium=null,e.addNewStadium=function(){e.newStadium=t.getEmptyStadiumObject()},e.saveNewStadium=function(){t.addStadium(e.newStadium).then(a=>{n.success("Stadium was added successfully"),e.newStadium=null,e.stadiums.push(a)})},e.deleteStadium=function(a){var t=a;a.delete().then(()=>{n.success("Stadium was deleted successfully"),e.stadiums.splice(e.stadiums.indexOf(t),1)})},e.schema=t.getStaidumSchema()}]),angular.module("mundialitoApp").factory("StadiumsManager",["$http","$q","Stadium","$log","MundialitoUtils",function(e,a,t,r,n){var s=void 0;return{_pool:{},_retrieveInstance:function(e,a){var n=this._pool[e];return n?(r.debug("StadiumsManager: updating existing instance of stadium "+e),n.setData(a)):(r.debug("StadiumsManager: saving new instance of stadium "+e),n=new t(a),this._pool[e]=n),n.LoadTime=new Date,n},_search:function(e){r.debug("StadiumsManager: will fetch stadium "+e+" from local pool");var a=this._pool[e];if(!angular.isDefined(a)||!n.shouldRefreshInstance(a))return a;r.debug("StadiumsManager: Instance was loaded at "+a.LoadTime+", will reload it from server")},_load:function(a,t){var n=this;r.debug("StadiumsManager: will fetch stadium "+a+" from server"),e.get("api/stadiums/"+a,{tracker:"getStadium"}).then(e=>{var a=n._retrieveInstance(e.data.StadiumId,e.data);t.resolve(a)}).catch(e=>{t.reject(e)})},getStaidumSchema:function(){return[{property:"Name",label:"Name",type:"text",attr:{required:!0}},{property:"City",label:"City",type:"text",attr:{required:!0}},{property:"Capacity",label:"Capacity",type:"number",attr:{required:!0}}]},getEmptyStadiumObject:function(){return{HomeTeam:"",AwayTeam:""}},addStadium:function(t){var n=a.defer(),s=this;return r.debug("StadiumsManager: will add new stadium - "+angular.toJson(t)),e.post("api/stadiums",t,{tracker:"addStadium"}).then(e=>{var a=s._retrieveInstance(e.data.StadiumId,e.data);n.resolve(a)}).catch(e=>{n.reject(e)}),n.promise},getStadium:function(e,t){var r=a.defer(),n=void 0;return angular.isDefined(t)&&t||(n=this._search(e)),n?r.resolve(n):this._load(e,r),r.promise},loadAllStadiums:function(){if(s)return s;var t=a.defer(),n=this;return r.debug("StadiumsManager: will fetch all games from server"),e.get("api/stadiums",{tracker:"getStadiums",cache:!0}).then(e=>{var a=[];e.data.forEach(e=>{var t=n._retrieveInstance(e.StadiumId,e);a.push(t)}),t.resolve(a)}).catch(e=>{t.reject(e)}),s=t.promise,t.promise},setStadium:function(e){r.debug("StadiumsManager: will set stadium "+e.StadiumId+" to -"+angular.toJson(e));var a=this._search(e.StadiumId);return a?a.setData(e):a=this._retrieveInstance(e.StadiumId,e),a}}}]),angular.module("mundialitoApp").factory("Team",["$http","$log",function(e,a){function t(e){e&&this.setData(e)}return t.prototype={setData:function(e){angular.extend(this,e),this.Logo=this.Logo.toLowerCase(),this.Flag=this.Flag.toLowerCase()},delete:function(){if(confirm("Are you sure you would like to delete team "+this.Name))return a.debug("Team: Will delete team "+this.TeamId),e.delete("api/teams/"+this.TeamId,{tracker:"deleteTeam"})},update:function(){return a.debug("Team: Will update game "+this.TeamId),e.put("api/teams/"+this.TeamId,this,{tracker:"editTeam"})},getUrl:function(){return"/teams/"+this.TeamId}},t}]),angular.module("mundialitoApp").controller("TeamCtrl",["$scope","$log","TeamsManager","team","games","Alert","PluginsProvider",function(e,a,t,r,n,s,i){e.team=r,e.games=n,e.plugins={},e.showEditForm=!1,e.toKeyValue=(e=>_.keys(e).map(a=>({name:a,value:e[a]}))),e.IntegrationsData=e.toKeyValue(e.team.IntegrationsData),e.fromKeyValue=(e=>{let a={};return e.forEach(e=>{""!==e.name&&(a[e.name]=e.value)}),a}),i.getTeamDetailsFromAll(e.team).then(a=>{a.forEach(a=>{e.plugins[a.property]={data:a.data,template:a.template}})}),e.updateTeam=(()=>{e.team.IntegrationsData=e.fromKeyValue(e.IntegrationsData),e.team.update().then(e=>{s.success("Team was updated successfully"),t.setTeam(e.data)})}),e.schema=t.getTeamSchema()}]),angular.module("mundialitoApp").controller("TeamsCtrl",["$scope","$log","TeamsManager","teams","Alert",function(e,a,t,r,n){e.teams=r,e.showNewTeam=!1,e.newTeam=null,e.addNewTeam=function(){$(".selectpicker").selectpicker("refresh"),e.newTeam=t.getEmptyTeamObject()},e.saveNewTeam=function(){t.addTeam(e.newTeam).then(function(a){n.success("Team was added successfully"),e.newTeam=null,e.teams.push(a)})},e.deleteTeam=function(a){var t=a;a.delete().then(()=>{n.success("Team was deleted successfully"),e.teams.splice(e.teams.indexOf(t),1)})},e.schema=t.getTeamSchema()}]),angular.module("mundialitoApp").factory("TeamsManager",["$http","$q","Team","$log","MundialitoUtils",function(e,a,t,r,n){return{_pool:{},_retrieveInstance:function(e,a){var n=this._pool[e];return n?(r.debug("TeamsManager: updating existing instance of team "+e),n.setData(a)):(r.debug("TeamsManager: saving new instance of team "+e),n=new t(a),this._pool[e]=n),n.LoadTime=new Date,n},_search:function(e){r.debug("TeamsManager: will fetch team "+e+" from local pool");var a=this._pool[e];if(!angular.isDefined(a)||!n.shouldRefreshInstance(a))return a;r.debug("TeamsManager: Instance was loaded at "+instanceLoadTime+", will reload it from server")},_load:function(a,t){var n=this;r.debug("TeamsManager: will fetch team "+a+" from server"),e.get("api/teams/"+a,{tracker:"getTeam"}).then(e=>{var a=n._retrieveInstance(e.data.TeamId,e.data);t.resolve(a)}).catch(e=>{t.reject(e)})},getTeamSchema:function(){return[{property:"Name",label:"Name",type:"text",attr:{required:!0}},{property:"Flag",label:"Flag",type:"url",attr:{required:!0}},{property:"TeamPage",label:"TeamPage",type:"url",attr:{required:!1}},{property:"Logo",label:"Logo",type:"url",attr:{required:!0}},{property:"ShortName",label:"Short Name",type:"text",attr:{ngMaxlength:3,ngMinlength:3,required:!0}},{property:"TournamentTeamId",label:"Tournament Team Id",type:"number",attr:{required:!1}}]},getEmptyTeamObject:function(){return{Name:"",Flag:"",Logo:"",ShortName:"",TournamentTeamId:null,TeamPage:null}},addTeam:function(t){var n=a.defer(),s=this;return r.debug("TeamsManager: will add new team - "+angular.toJson(t)),e.post("api/teams",t,{tracker:"addTeam"}).then(e=>{var a=s._retrieveInstance(e.data.TeamId,e.data);n.resolve(a)}).catch(e=>{n.reject(e)}),n.promise},getTeam:function(e,t){var r=a.defer(),n=void 0;return angular.isDefined(t)&&t||(n=this._search(e)),n?r.resolve(n):this._load(e,r),r.promise},loadAllTeams:function(){var t=a.defer(),n=this;return r.debug("TeamsManager: will fetch all teams from server"),e.get("api/teams",{tracker:"getTeams",cache:!0}).then(e=>{var a=[];e.data.forEach(e=>{var t=n._retrieveInstance(e.TeamId,e);a.push(t)}),t.resolve(a)}).catch(e=>{t.reject(e)}),t.promise},setTeam:function(e){r.debug("TeamsManager: will set team "+e.TeamId+" to -"+angular.toJson(e));var a=this._search(e.TeamId);return a?a.setData(e):a=this._retrieveInstance(e.TeamId,e),a}}}]),angular.module("mundialitoApp").controller("ManageAppCtrl",["$scope","$log","Alert","users","teams","generalBets","UsersManager","players",function(e,a,t,r,n,s,i,o){e.users=r,e.generalBets=s,e.privateKey={},e.teamsDic={},e.playersDic={};for(var l=0;l<n.length;l++)e.teamsDic[n[l].TeamId]=n[l];for(l=0;l<o.length;l++)e.playersDic[o[l].PlayerId]=o[l];e.deleteUser=function(a){var r=a;a.delete().then(()=>{t.success("User was deleted successfully"),e.users.splice(e.users.indexOf(r),1)})},e.resolveBet=function(e){e.resolve().then(()=>{t.success("General bet was resolved successfully")})},e.generateKey=function(){e.privateKey.key="",i.generatePrivateKey(e.privateKey.email).then(function(t){a.debug("ManageAppCtrl: got private key "+t),e.privateKey.key=t})},e.makeAdmin=function(e){e.makeAdmin().then(()=>{t.success("User was is now admin"),e.IsAdmin=!0})}}]),angular.module("mundialitoApp").factory("User",["$http","$log",function(e,a){function t(e){e&&this.setData(e)}return t.prototype={setData:function(e){angular.extend(this,e)},getUrl:function(){return"/users/"+this.Username},delete:function(){if(confirm("Are you sure you would like to delete user "+this.Username))return a.debug("User: Will delete user "+this.Username),e.delete("api/users/"+this.Id,{tracker:"deleteUser"})},makeAdmin:function(){if(confirm("Are you sure you would like to make "+this.Name+" Admin?"))return a.debug("User: Will make user "+this.Username+" admin"),e.post("api/users/makeadmin/"+this.Id,{tracker:"makeAdmin"})}},t}]),angular.module("mundialitoApp").controller("UserProfileCtrl",["$scope","$log","UsersManager","Alert","GeneralBetsManager","profileUser","userGameBets","teams","generalBetsAreOpen","players",function(a,t,r,n,s,i,o,l,u,d){a.profileUser=i,a.userGameBets=o,a.teams=l,a.players=d,a.noGeneralBetWasSubmitted=!1,a.generalBetsAreOpen=!0===u,t.debug("UserProfileCtrl: generalBetsAreOpen = "+u),a.alreadyFollow=a.security.user.Followees.includes(a.profileUser.Username),a.isLoggedUserProfile=(()=>{var e=null!=a.security.user&&a.security.user.Username===a.profileUser.Username;return t.debug("UserProfileCtrl: isLoggedUserProfile = "+e),null!=a.security.user&&a.security.user.Username===a.profileUser.Username}),a.isGeneralBetClosed=(()=>{var e=!a.generalBetsAreOpen;return t.debug("UserProfileCtrl: isGeneralBetClosed = "+e),e}),a.isGeneralBetReadOnly=(()=>{var e=!a.isLoggedUserProfile()||a.isGeneralBetClosed();return t.debug("UserProfileCtrl: isGeneralBetReadOnly = "+e),e}),a.shoudLoadGeneralBet=(()=>{var e=a.isLoggedUserProfile()||a.isGeneralBetClosed();return t.debug("UserProfileCtrl: shoudLoadGeneralBet = "+e),e}),a.shoudLoadGeneralBet()&&s.hasGeneralBet(a.profileUser.Username).then(e=>{if(t.debug("UserProfileCtrl: hasGeneralBet = "+e),!0===e)s.getUserGeneralBet(a.profileUser.Username).then(e=>{t.info("UserProfileCtrl: got user general bet - "+angular.toJson(e)),a.generalBet=e});else{if(a.generalBet={},a.isGeneralBetClosed())return void(a.noGeneralBetWasSubmitted=!0);if(a.isLoggedUserProfile()&&!a.isGeneralBetClosed())return;a.noGeneralBetWasSubmitted=!0}}),a.saveGeneralBet=(()=>{angular.isDefined(a.generalBet.GeneralBetId)?a.generalBet.update().then(()=>{n.success("General Bet was updated successfully")},()=>{n.error("Failed to update General Bet, please try again")}):s.addGeneralBet(a.generalBet).then(e=>{t.log("UserProfileCtrl: General Bet "+e.GeneralBetId+" was added"),a.generalBet=e,n.success("General Bet was added successfully")},()=>{n.error("Failed to add General Bet, please try again")})}),a.social=(()=>{a.alreadyFollow?r.unfollow(a.profileUser.Username).then(()=>{a.alreadyFollow=!1;const e=a.security.user.Followees.indexOf(a.profileUser.Username);a.security.user.Followees.splice(e,1),n.success("You no longer following "+a.profileUser.Username)}).catch(t=>{n.error("Failed to unfollow "+a.profileUser.Username+": "+e)}):r.follow(a.profileUser.Username).then(()=>{a.alreadyFollow=!0,a.security.user.Followees.push(a.profileUser.Username),n.success("You are now following "+a.profileUser.Username)}).catch(t=>{n.error("Failed to follow "+a.profileUser.Username+": "+e)})}),r.getSocial(a.profileUser.Username).then(e=>{t.log("UserProfileCtrl: Got social response"),a.followers=e.followers,a.followees=e.followees})}]),angular.module("mundialitoApp").factory("UsersManager",["$http","$q","User","$log","MundialitoUtils","DSCacheFactory",function(e,a,t,r,n,s){var i=void 0;return{_cacheManager:s("UsersManager",{cacheFlushInterval:18e5}),_pool:{},_retrieveInstance:function(e,a){var n=this._pool[e];return n?(r.debug("UsersManager: updating existing instance of user "+e),n.setData(a)):(r.debug("UsersManager: saving new instance of user "+e),n=new t(a),this._pool[e]=n),n.LoadTime=new Date,n},_search:function(e){r.debug("UsersManager: will fetch user "+e+" from local pool");var a=this._pool[e];if(!angular.isDefined(a)||!n.shouldRefreshInstance(a))return a;r.debug("UsersManager: Instance was loaded at "+a,LoadTime+", will reload it from server")},_load:function(a,t){var n=this;r.debug("UsersManager: will fetch user "+a+" from server"),e.get("api/users/"+a,{tracker:"getUser"}).then(e=>{var a=n._retrieveInstance(e.data.Username,e.data);t.resolve(a)}).catch(e=>{t.reject(e)})},getUser:function(e,t){var r=a.defer(),n=void 0;return angular.isDefined(t)&&t||(n=this._search(e)),n?r.resolve(n):this._load(e,r),r.promise},generatePrivateKey:function(t){var n=a.defer();return r.debug("UsersManager: will generate private key for "+t),e.get("api/users/generateprivatekey/"+encodeURIComponent(t)+"/",{tracker:"generatePrivateKey"}).then(e=>{n.resolve(e.data)}).catch(e=>{n.reject(e)}),n.promise},getTable:function(){var a=this;return r.debug("UsersManager: will fetch table from server"),e.get("api/users/table",{tracker:"getUsers"}).then(e=>{var t=[];return e.data.forEach(e=>{var r=a._retrieveInstance(e.Username,e);t.push(r)}),t})},getSocial:a=>(r.debug("UsersManager: will fetch followers and followees of user "+a),e.get("api/users/"+a+"/followees",{tracker:"getSocial"}).then(t=>e.get("api/users/"+a+"/followers",{tracker:"getSocial"}).then(e=>({followers:e.data,followees:t.data})))),follow:a=>(r.debug("UsersManager: will follow "+a),e.post("api/users/follow/"+a,void 0,{tracker:"follow"})),unfollow:a=>(r.debug("UsersManager: will unfollow "+a),e.delete("api/users/follow/"+a,void 0,{tracker:"unfollow"})),loadAllUsers:function(){if(i)return i;var t=a.defer(),n=this;return r.debug("UsersManager: will fetch all users from server"),e.get("api/users",{tracker:"getUsers"}).then(e=>{var a=[];e.data.forEach(function(e){var t=n._retrieveInstance(e.Username,e);a.push(t)}),t.resolve(a)}).catch(e=>{t.reject(e)}),i=t.promise,t.promise},setUser:function(e){r.debug("UsersManager: will set user "+e.Username+" to -"+angular.toJson(e));var a=this._search(e.Username);return a?a.setData(e):a=this._retrieveInstance(e.Username,e),a}}}]),angular.module("mundialitoApp").factory("FootballDataGamePlugin",["$q","$rootScope","GenericProxyService",function(e,a,t){var r="https://api.football-data.org/v4/matches/";const n="football-data";return{getGameDetails:function(s){var i=r+s.IntegrationsData[n];return a.mundialitoApp.clientConfig&&a.mundialitoApp.clientConfig["football-data-api-key"]?t.proxyRequest("GET",i,void 0,{"X-Auth-Token":a.mundialitoApp.clientConfig["football-data-api-key"]}).then(e=>({data:e,property:"odds",template:"App/General/Plugins/FootballDataGameTemplate.html"})).catch(a=>e.reject(a)):e.reject("Skipping football-data as no api key provided")},integrationKey:n}}]),angular.module("mundialitoApp").factory("FootballDataTeamStatsPlugin",["$q","$rootScope","GenericProxyService",function(e,a,t){var r="https://api.football-data.org/v4/teams/";const n="football-data";function s(e){return(new Date).getFullYear()-parseInt(e.substring(0,4),10)}return{getTeamDetails:function(i){var o=r+i.IntegrationsData[n];return a.mundialitoApp.clientConfig&&a.mundialitoApp.clientConfig["football-data-api-key"]?t.proxyRequest("GET",o,void 0,{"X-Auth-Token":a.mundialitoApp.clientConfig["football-data-api-key"]}).then(e=>(e.coach.age=s(e.coach.dateOfBirth),e.squad.forEach(e=>{e.age=s(e.dateOfBirth),e.icon="goalkeeper"===e.position.toLowerCase()?"goalkeeper":"player"}),{data:e,property:"team-squad",template:"App/General/Plugins/FootballDataTeamStatsTemplate.html"})).catch(a=>e.reject(a)):e.reject("Skipping football-data as no api key provided")},integrationKey:n}}]),angular.module("mundialitoApp").factory("GenericProxyService",["$http","$q",function(e,a){var t="api/genericproxy";return{proxyRequest:function(r,n,s,i){var o=a.defer();return e({method:r,url:t+"?url="+n,data:s,headers:i,ignoreError:!0}).then(e=>{o.resolve(e.data)}).catch(e=>{o.reject(e)}),o.promise}}}]),angular.module("mundialitoApp").factory("PluginsProvider",["$q","$log",function(e,a){var t=[],r=[];return{getGameDetailsFromAll:function(r){let n=[];r.IntegrationsData&&(n=_.filter(t,e=>void 0!==r.IntegrationsData[e.integrationKey]));var s=n.map(e=>e.getGameDetails(r));return e.all(s).then(e=>e).catch(t=>(a.warn("Error fetching game details: "+t),e.reject(t)))},getTeamDetailsFromAll:function(t){let n=[];t.IntegrationsData&&(n=_.filter(r,e=>void 0!==t.IntegrationsData[e.integrationKey]));var s=n.map(e=>e.getTeamDetails(t));return e.all(s).then(e=>e).catch(t=>(a.warn("Error fetching team details: "+t),e.reject(t)))},registerGameFactory:e=>{t.push(e)},registerTeamFactory:e=>{r.push(e)}}}]);